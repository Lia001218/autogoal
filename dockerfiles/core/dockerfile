# =====================
# Python 3.9.16 core image
# ---------------------

FROM python:3.9.16

# =====================
# Basic enviroment setup
# ---------------------

RUN apt update \
 && apt install -y \
    curl \
    locales \
    nano \
    ssh \
    sudo \
    bash \
    git \
    make \
    gcc \
    build-essential \ 
    python3-dev \
    ffmpeg \
    libsm6 \
    libxext6 \
    apt-transport-https \
    gnupg \
    rsync
# =====================
# User stuff
# ---------------------


# RUN curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg
# RUN sudo mv bazel-archive-keyring.gpg /usr/share/keyrings
# # echo "deb [arch=amd64 signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
# RUN sudo apt install bazel

# https://wiki.debian.org/Locale#Manually
RUN sed -i "s/# en_US.UTF-8/en_US.UTF-8/" /etc/locale.gen \
  && locale-gen
ENV LANG=en_US.UTF-8
RUN chsh -s /bin/bash
ENV SHELL=/bin/bash
RUN adduser --gecos '' --disabled-password coder && \
  echo "coder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/nopasswd


# ==========================================
# Poetry related config
# ------------------------------------------
ARG PIPX_VERSION=1.2.0 POETRY_VERSION=1.2
ENV PATH=/opt/pipx/bin:/app/.venv/bin:$PATH PIPX_BIN_DIR=/opt/pipx/bin PIPX_HOME=/opt/pipx/home POETRY_VIRTUALENVS_IN_PROJECT=true

# ==========================================
# Project-specific installation instruction
# ------------------------------------------

COPY bash.bashrc /etc
RUN chmod +x /etc/bash.bashrc
ENV BUILD_ENVIRONMENT="development"

RUN python3 -m pip install --no-cache-dir --upgrade --user "pipx==$PIPX_VERSION" \
  && python3 -m pipx ensurepath \
  && python3 -m pipx completions \
  && python3 -m pipx install "poetry==$POETRY_VERSION" \
  && poetry config installer.max-workers 10

WORKDIR /home/coder/autogoal

# Make RUN commands use the autogoal environment
COPY makefile /home/coder/autogoal/

SHELL ["/bin/bash", "-c"]
# USER coder
# && sudo chown coder:coder /home/coder/autogoal
RUN sudo mkdir -p /home/coder/autogoal/data 
VOLUME /home/coder/autogoal
RUN sudo rm -rf /home/coder/autogoal/storage
# RUN sudo chown -R coder /home/coder

# Copy code-base for autogoal-core
COPY ../autogoal /home/coder/autogoal/autogoal

# Copy code-base for autogoal-contrib
COPY ../autogoal-contrib /home/coder/autogoal/autogoal-contrib

# Copy code-base for autogoal-remote
COPY ../autogoal-remote /home/coder/autogoal/autogoal-remote

# Copy code-base for autogoal-remote
COPY ../scripts /home/coder/autogoal/scripts

# Install autogoal core
COPY dockerfiles/install-package.sh install-package.sh 
# COPY dockerfiles/generate-tesorflow-addons-wheel.sh /home/generate-tesorflow-addons-wheel.sh 

RUN ./install-package.sh core 

# RUN wget https://github.com/bazelbuild/bazelisk/releases/download/v1.18.0/bazelisk-linux-arm64 \
#   && chmod +x bazelisk-linux-arm64 \
#   && sudo mv bazelisk-linux-arm64 /usr/local/bin/bazel \
#   && chmod +x generate-tesorflow-addons-wheel.sh \
#   && ./generate-tesorflow-addons-wheel.sh
 
# Install bazel

CMD ["/bin/bash"]